생성자는 가상함수가 될 수 없음
생성자에게 가상함수를 호출해도 동적 바인딩이 일어나지않음


가상함수로 만드는 것이 바람직

함수 재정의는 정적바인딩이니 컴파일시간다형성?



적어도 사람이면 청소는하고 살아야돼
청소는 느그 세대에서 알아서 정의해라 

부모클래스에 함수에 가상함수를 만드는 것은 인터페이스의 목적이다
느그는 각각에 맞는 그림을 그려야한다 ㄹㅇㅋㅋ



순수하다 가상함수가 아무것도안하면 순수한거임
구현이 없으면 순수 가상함수라고 한다
인터페이스만 제공한다

순수가상함수는 인터페이스만 제공하는 것이다.
청소라는 기능만 가져가서 청소하는법은 알아서구현해라
로봇청소기든 물걸레쓰든 니알아서해라 내알빠노 ㅋㅋ

청소는하되 (인터페이스만 제공) 청소방법은 니가 알아서해라 ㅋㅋㅋ


최소하나의 순수가상함수를 가진 클래스
클래스의 주목적은 객체를 만드는건데
이놈은 추상이라고 한다
생각만 대가리만 형식적으로 굴리는것
추상클래스의 인스턴스(객체)를 생성할 수없다

니가 사람이면 먹고자고쓰고이런 기능들을 해라
그건 각자 맞춰서해라 
먹는다는기능있어야한다
인간이라면 자고먹고 싸야한다 니가 사람이라면 일은 해야지 ㄹㅇㅋㅋ

사람이 꼭 입으로만 먹어야하는건 아니고 그건 각자 구현해라
먹는다는기능 싼다라는기능 잔다라는 기능 이거에 대해서 
인간이라면 요거만 갖고있어라 상속받은 클래스들이 이거에 대한 방법은 알아서해라

계층적상속관계
추상클래스가 적합하다

추상클래스는 포인터는 생성이 가능하다
오버라이딩한거 구현안시켜놓으면 자식도 추상되는거다
하지만 구현을 하면 생성가능이다.

c++이 가지는 특징중에 일반화

일반화시키지마셈 ㄹㅇㅋㅋ
중2병애들

중2병이라는 템플릿을 만드는거임
ppt쓸때 템플릿쓰는데 글꼴 크기 얼마로 하고 색깔 ㅇㅇ로 하는 
일반화하는걸 가져온다


템플릿에 정해놓은 기능들 
템플릿으로 일반화시켜서 활용한다


매개변수만 틀릴뿐이지 들어가는 코드도 중복된다
중2병 템플릿

중복되는 함수나 클래스를 일반화시키자
매개변수 타입을 지정하여 틀에서 찍어내듯이 함수나 클래스 코드를 생산하는 기법

일반화시키는 도구가 템플릿이다
변수나 매개변수의 타입만 다르고, 코드 부분이 동일한 함수를 일반화시킨다. 

제네릭타입 - 일반화를 위한 데이터타입

템플릿을 만들어서 t라는걸 쓸거임 

변수 타입이 아니라 제네릭타입이라는 새로운 타입을 만드는거임

컴파일러는 얘를 구체화시켜서 컴파일할것이다
t-> int, double class


컴파일러가 함수의 호출문을 컴파일하여 구체화를 통ㅇ해 
제네릭함수로부터 구체적인 함수나 소스코드를 만들어내는데 
ex)이때 구체화를 통해 생성되는 함수

int a = 4,b = 5 <- 구체화



하나의 ppt 틀이고 넣기에 따라서 달라진다 수학ppt 영어 ppt


실인자 타입 동일해야함 그렇지 않으면 컴파일오류뜸

소프트웨어의 생산성 유연성 (코드 재사용)
컴파일러가 구체화시켜줌

하드웨어적으로 다른 컴파일에서는 지원안해줄수도있음

이거 맘에 안드노 저 괜찮은 템플릿 라이브러리 다운받아엇 써야지 ㅋㅋㅋㅋ
파워포인트 템플릿 처럼 괜찮은거 다운받아서 쓴다ㅋㅋ

무료인애들 꺼 바꿔서 수정하면됨


매크로로는 함수나 클래스 표현이 힘들다
컴파일러가 구체화라는 과정을 거치기 때문에 훨씬 더 안정적이다. 

어떠한 기본타입의 포인터형이라고 할 수 있다. 
(배열의 이름이 포인터이므로)

배열또는 포인터로 명시하지 않아도 구체화하는 과정에서 자동적으로 포인터형으로 변환하여 컴파일하게된다.

문 쾅못닫는팔이없는 힘이없는 중2병아닌 애는 일반화해서 하면 안되고 
따로 기능을 넣어주고 해야한다

템플릿 매개변수에도 디폴트값을 설정 가능
